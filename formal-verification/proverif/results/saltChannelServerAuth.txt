Linear part:
dhexp(b_38,dhexp(a_37,g)) = dhexp(a_37,dhexp(b_38,g))
Completing equations...
Completed equations:
dhexp(b_38,dhexp(a_37,g)) = dhexp(a_37,dhexp(b_38,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}!
(
    {2}event ClientInitialized(alice,bob);
    {3}let v_136: key = catch-fail(dhexp(encKey(alice,bob),g)) in
    {4}let clientEncPair: keypair = (if not-caught-fail(v_136) then keypairpack(v_136,encKey(alice,bob)) else fail-any) in
    {5}let v_137: key = catch-fail(sigexp(sigKey(alice))) in
    {6}let clientSigPair: keypair = (if not-caught-fail(v_137) then keypairpack(v_137,sigKey(alice)) else fail-any) in
    {7}let v_138: key = catch-fail(dhexp(encKey(bob,alice),g)) in
    {8}let serverEncPair: keypair = (if not-caught-fail(v_138) then keypairpack(v_138,encKey(bob,alice)) else fail-any) in
    {9}let v_139: key = catch-fail(sigexp(sigKey(bob))) in
    {10}let serverSigPair: keypair = (if not-caught-fail(v_139) then keypairpack(v_139,sigKey(bob)) else fail-any) in
    {11}out(pub, (getPublicKey(clientEncPair),getPublicKey(serverSigPair)));
    {12}let m1Hash: bitstring = hash(getPublicKey(clientEncPair),getPublicKey(serverSigPair)) in
    {13}in(pub, serverEncKeyPub: key);
    {14}let m2Hash: bitstring = hash(serverEncKeyPub,empty) in
    {15}in(pub, m3Enc: bitstring);
    {16}let v_140: bitstring = catch-fail(keypairunpack(clientEncPair)) in
    {17}let (m3Valid: bool,m3Ad: bitstring,m3: bitstring) = aeadunpack(decrypt((if (not-caught-fail(v_140) && success?(is-true(success?(1-proj-2-tuple(v_140))))) then dhexp(2-proj-2-tuple(v_140),serverEncKeyPub) else fail-any),nonce_0,empty,m3Enc)) in
    {18}if m3Valid then
    {19}let (serverSigKeyPubBitstring: bitstring,signature1: bitstring) = deconcat2(m3) in
    {20}let serverSigKeyPub: key = serverSigKeyPubBitstring in
    {21}if ((serverSigKeyPub = getPublicKey(serverSigPair)) && verifySig(serverSigKeyPub,signature1,concat3(scsig01,m1Hash,m2Hash))) then
    {22}let signature2: bitstring = sign(sigKey(alice),concat3(scsig02,m1Hash,m2Hash)) in
    {23}let m4: bitstring = concat2(getPublicKey(clientSigPair),signature2) in
    {24}let v_141: bitstring = catch-fail(keypairunpack(clientEncPair)) in
    {25}let m4Enc: bitstring = encrypt((if (not-caught-fail(v_141) && success?(is-true(success?(1-proj-2-tuple(v_141))))) then dhexp(2-proj-2-tuple(v_141),serverEncKeyPub) else fail-any),nonce_1,empty,m4) in
    {26}out(pub, m4Enc);
    {27}phase 1;
    {28}in(pub, secMsg_a: bitstring);
    {29}let v_142: bitstring = catch-fail(keypairunpack(clientEncPair)) in
    {30}let (decMsg_aValid: bool,decMsg_aAd: bitstring,decMsg_a: bitstring) = aeadunpack(decrypt((if (not-caught-fail(v_142) && success?(is-true(success?(1-proj-2-tuple(v_142))))) then dhexp(2-proj-2-tuple(v_142),serverEncKeyPub) else fail-any),nonce_2,empty,secMsg_a)) in
    {31}if decMsg_aValid then
    {32}event RecvMsgA(alice,bob);
    {33}phase 2;
    {34}let v_143: bitstring = catch-fail(keypairunpack(clientEncPair)) in
    {35}let secMsg_b: bitstring = encrypt((if (not-caught-fail(v_143) && success?(is-true(success?(1-proj-2-tuple(v_143))))) then dhexp(2-proj-2-tuple(v_143),serverEncKeyPub) else fail-any),nonce_3,empty,msg_b(alice,bob)) in
    {36}event SendMsgB(alice,bob);
    {37}out(pub, secMsg_b);
    {38}phase 3;
    {39}out(pub, sigKey(alice))
) | (
    {40}event ServerInitialized(bob,alice);
    {41}let v_144: key = catch-fail(dhexp(encKey(alice,bob),g)) in
    {42}let clientEncPair_145: keypair = (if not-caught-fail(v_144) then keypairpack(v_144,encKey(alice,bob)) else fail-any) in
    {43}let v_146: key = catch-fail(sigexp(sigKey(alice))) in
    {44}let clientSigPair_147: keypair = (if not-caught-fail(v_146) then keypairpack(v_146,sigKey(alice)) else fail-any) in
    {45}let v_148: key = catch-fail(dhexp(encKey(bob,alice),g)) in
    {46}let serverEncPair_149: keypair = (if not-caught-fail(v_148) then keypairpack(v_148,encKey(bob,alice)) else fail-any) in
    {47}let v_150: key = catch-fail(sigexp(sigKey(bob))) in
    {48}let serverSigPair_151: keypair = (if not-caught-fail(v_150) then keypairpack(v_150,sigKey(bob)) else fail-any) in
    {49}in(pub, (clientEncKeyPub: key,=getPublicKey(serverSigPair_151)));
    {50}let m1Hash_152: bitstring = hash(clientEncKeyPub,getPublicKey(serverSigPair_151)) in
    {51}out(pub, getPublicKey(serverEncPair_149));
    {52}let m2Hash_153: bitstring = hash(getPublicKey(serverEncPair_149),empty) in
    {53}let signature1_154: bitstring = sign(sigKey(bob),concat3(scsig01,m1Hash_152,m2Hash_153)) in
    {54}let m3_155: bitstring = concat2(getPublicKey(serverSigPair_151),signature1_154) in
    {55}let v_156: bitstring = catch-fail(keypairunpack(serverEncPair_149)) in
    {56}let m3Enc_157: bitstring = encrypt((if (not-caught-fail(v_156) && success?(is-true(success?(1-proj-2-tuple(v_156))))) then dhexp(2-proj-2-tuple(v_156),clientEncKeyPub) else fail-any),nonce_0,empty,m3_155) in
    {57}out(pub, m3Enc_157);
    {58}in(pub, m4Enc_158: bitstring);
    {59}let v_159: bitstring = catch-fail(keypairunpack(serverEncPair_149)) in
    {60}let (m4Valid: bool,m4Ad: bitstring,m4_160: bitstring) = aeadunpack(decrypt((if (not-caught-fail(v_159) && success?(is-true(success?(1-proj-2-tuple(v_159))))) then dhexp(2-proj-2-tuple(v_159),clientEncKeyPub) else fail-any),nonce_1,empty,m4Enc_158)) in
    {61}if m4Valid then
    (
        {62}let (clientSigKeyPubBitstring: bitstring,signature2_161: bitstring) = deconcat2(m4_160) in
        {63}let clientSigKeyPub: key = clientSigKeyPubBitstring in
        {64}if ((clientSigKeyPub = clientSigKeyPub) && verifySig(clientSigKeyPub,signature2_161,concat3(scsig02,m1Hash_152,m2Hash_153))) then
        (
            {65}event HandshakeEstablished(bob,alice);
            {66}phase 1;
            {67}let v_162: bitstring = catch-fail(keypairunpack(serverEncPair_149)) in
            {68}let secMsg_a_163: bitstring = encrypt((if (not-caught-fail(v_162) && success?(is-true(success?(1-proj-2-tuple(v_162))))) then dhexp(2-proj-2-tuple(v_162),clientEncKeyPub) else fail-any),nonce_2,empty,msg_a(bob,alice)) in
            {69}event SendMsgA(bob,alice);
            {70}out(pub, secMsg_a_163);
            {71}phase 2;
            {72}in(pub, secMsg_b_164: bitstring);
            {73}let v_165: bitstring = catch-fail(keypairunpack(serverEncPair_149)) in
            {74}let (decMsg_bValid: bool,decMsg_bAd: bitstring,decMsg_b: bitstring) = aeadunpack(decrypt((if (not-caught-fail(v_165) && success?(is-true(success?(1-proj-2-tuple(v_165))))) then dhexp(2-proj-2-tuple(v_165),clientEncKeyPub) else fail-any),nonce_3,empty,secMsg_b_164)) in
            {75}if decMsg_bValid then
            {76}event RecvMsgB(bob,alice);
            {77}phase 3;
            {78}out(pub, sigKey(bob))
        )
        else
            {79}event Signature2CheckFail(bob,alice)
    )
    else
        {80}event M4DecFail(bob,alice)
) | (
    {81}event ClientInitialized(alice,charlie);
    {82}let v_166: key = catch-fail(dhexp(encKey(alice,charlie),g)) in
    {83}let clientEncPair_167: keypair = (if not-caught-fail(v_166) then keypairpack(v_166,encKey(alice,charlie)) else fail-any) in
    {84}let v_168: key = catch-fail(sigexp(sigKey(alice))) in
    {85}let clientSigPair_169: keypair = (if not-caught-fail(v_168) then keypairpack(v_168,sigKey(alice)) else fail-any) in
    {86}let v_170: key = catch-fail(dhexp(encKey(charlie,alice),g)) in
    {87}let serverEncPair_171: keypair = (if not-caught-fail(v_170) then keypairpack(v_170,encKey(charlie,alice)) else fail-any) in
    {88}let v_172: key = catch-fail(sigexp(sigKey(charlie))) in
    {89}let serverSigPair_173: keypair = (if not-caught-fail(v_172) then keypairpack(v_172,sigKey(charlie)) else fail-any) in
    {90}out(pub, (getPublicKey(clientEncPair_167),getPublicKey(serverSigPair_173)));
    {91}let m1Hash_174: bitstring = hash(getPublicKey(clientEncPair_167),getPublicKey(serverSigPair_173)) in
    {92}in(pub, serverEncKeyPub_175: key);
    {93}let m2Hash_176: bitstring = hash(serverEncKeyPub_175,empty) in
    {94}in(pub, m3Enc_177: bitstring);
    {95}let v_178: bitstring = catch-fail(keypairunpack(clientEncPair_167)) in
    {96}let (m3Valid_179: bool,m3Ad_180: bitstring,m3_181: bitstring) = aeadunpack(decrypt((if (not-caught-fail(v_178) && success?(is-true(success?(1-proj-2-tuple(v_178))))) then dhexp(2-proj-2-tuple(v_178),serverEncKeyPub_175) else fail-any),nonce_0,empty,m3Enc_177)) in
    {97}if m3Valid_179 then
    {98}let (serverSigKeyPubBitstring_182: bitstring,signature1_183: bitstring) = deconcat2(m3_181) in
    {99}let serverSigKeyPub_184: key = serverSigKeyPubBitstring_182 in
    {100}if ((serverSigKeyPub_184 = getPublicKey(serverSigPair_173)) && verifySig(serverSigKeyPub_184,signature1_183,concat3(scsig01,m1Hash_174,m2Hash_176))) then
    {101}let signature2_185: bitstring = sign(sigKey(alice),concat3(scsig02,m1Hash_174,m2Hash_176)) in
    {102}let m4_186: bitstring = concat2(getPublicKey(clientSigPair_169),signature2_185) in
    {103}let v_187: bitstring = catch-fail(keypairunpack(clientEncPair_167)) in
    {104}let m4Enc_188: bitstring = encrypt((if (not-caught-fail(v_187) && success?(is-true(success?(1-proj-2-tuple(v_187))))) then dhexp(2-proj-2-tuple(v_187),serverEncKeyPub_175) else fail-any),nonce_1,empty,m4_186) in
    {105}out(pub, m4Enc_188);
    {106}phase 1;
    {107}in(pub, secMsg_a_189: bitstring);
    {108}let v_190: bitstring = catch-fail(keypairunpack(clientEncPair_167)) in
    {109}let (decMsg_aValid_191: bool,decMsg_aAd_192: bitstring,decMsg_a_193: bitstring) = aeadunpack(decrypt((if (not-caught-fail(v_190) && success?(is-true(success?(1-proj-2-tuple(v_190))))) then dhexp(2-proj-2-tuple(v_190),serverEncKeyPub_175) else fail-any),nonce_2,empty,secMsg_a_189)) in
    {110}if decMsg_aValid_191 then
    {111}event RecvMsgA(alice,charlie);
    {112}phase 2;
    {113}let v_194: bitstring = catch-fail(keypairunpack(clientEncPair_167)) in
    {114}let secMsg_b_195: bitstring = encrypt((if (not-caught-fail(v_194) && success?(is-true(success?(1-proj-2-tuple(v_194))))) then dhexp(2-proj-2-tuple(v_194),serverEncKeyPub_175) else fail-any),nonce_3,empty,msg_b(alice,charlie)) in
    {115}event SendMsgB(alice,charlie);
    {116}out(pub, secMsg_b_195);
    {117}phase 3;
    {118}out(pub, sigKey(alice))
) | (
    {119}event ServerInitialized(bob,charlie);
    {120}let v_196: key = catch-fail(dhexp(encKey(charlie,bob),g)) in
    {121}let clientEncPair_197: keypair = (if not-caught-fail(v_196) then keypairpack(v_196,encKey(charlie,bob)) else fail-any) in
    {122}let v_198: key = catch-fail(sigexp(sigKey(charlie))) in
    {123}let clientSigPair_199: keypair = (if not-caught-fail(v_198) then keypairpack(v_198,sigKey(charlie)) else fail-any) in
    {124}let v_200: key = catch-fail(dhexp(encKey(bob,charlie),g)) in
    {125}let serverEncPair_201: keypair = (if not-caught-fail(v_200) then keypairpack(v_200,encKey(bob,charlie)) else fail-any) in
    {126}let v_202: key = catch-fail(sigexp(sigKey(bob))) in
    {127}let serverSigPair_203: keypair = (if not-caught-fail(v_202) then keypairpack(v_202,sigKey(bob)) else fail-any) in
    {128}in(pub, (clientEncKeyPub_204: key,=getPublicKey(serverSigPair_203)));
    {129}let m1Hash_205: bitstring = hash(clientEncKeyPub_204,getPublicKey(serverSigPair_203)) in
    {130}out(pub, getPublicKey(serverEncPair_201));
    {131}let m2Hash_206: bitstring = hash(getPublicKey(serverEncPair_201),empty) in
    {132}let signature1_207: bitstring = sign(sigKey(bob),concat3(scsig01,m1Hash_205,m2Hash_206)) in
    {133}let m3_208: bitstring = concat2(getPublicKey(serverSigPair_203),signature1_207) in
    {134}let v_209: bitstring = catch-fail(keypairunpack(serverEncPair_201)) in
    {135}let m3Enc_210: bitstring = encrypt((if (not-caught-fail(v_209) && success?(is-true(success?(1-proj-2-tuple(v_209))))) then dhexp(2-proj-2-tuple(v_209),clientEncKeyPub_204) else fail-any),nonce_0,empty,m3_208) in
    {136}out(pub, m3Enc_210);
    {137}in(pub, m4Enc_211: bitstring);
    {138}let v_212: bitstring = catch-fail(keypairunpack(serverEncPair_201)) in
    {139}let (m4Valid_213: bool,m4Ad_214: bitstring,m4_215: bitstring) = aeadunpack(decrypt((if (not-caught-fail(v_212) && success?(is-true(success?(1-proj-2-tuple(v_212))))) then dhexp(2-proj-2-tuple(v_212),clientEncKeyPub_204) else fail-any),nonce_1,empty,m4Enc_211)) in
    {140}if m4Valid_213 then
    (
        {141}let (clientSigKeyPubBitstring_216: bitstring,signature2_217: bitstring) = deconcat2(m4_215) in
        {142}let clientSigKeyPub_218: key = clientSigKeyPubBitstring_216 in
        {143}if ((clientSigKeyPub_218 = clientSigKeyPub_218) && verifySig(clientSigKeyPub_218,signature2_217,concat3(scsig02,m1Hash_205,m2Hash_206))) then
        (
            {144}event HandshakeEstablished(bob,charlie);
            {145}phase 1;
            {146}let v_219: bitstring = catch-fail(keypairunpack(serverEncPair_201)) in
            {147}let secMsg_a_220: bitstring = encrypt((if (not-caught-fail(v_219) && success?(is-true(success?(1-proj-2-tuple(v_219))))) then dhexp(2-proj-2-tuple(v_219),clientEncKeyPub_204) else fail-any),nonce_2,empty,msg_a(bob,charlie)) in
            {148}event SendMsgA(bob,charlie);
            {149}out(pub, secMsg_a_220);
            {150}phase 2;
            {151}in(pub, secMsg_b_221: bitstring);
            {152}let v_222: bitstring = catch-fail(keypairunpack(serverEncPair_201)) in
            {153}let (decMsg_bValid_223: bool,decMsg_bAd_224: bitstring,decMsg_b_225: bitstring) = aeadunpack(decrypt((if (not-caught-fail(v_222) && success?(is-true(success?(1-proj-2-tuple(v_222))))) then dhexp(2-proj-2-tuple(v_222),clientEncKeyPub_204) else fail-any),nonce_3,empty,secMsg_b_221)) in
            {154}if decMsg_bValid_223 then
            {155}event RecvMsgB(bob,charlie);
            {156}phase 3;
            {157}out(pub, sigKey(bob))
        )
        else
            {158}event Signature2CheckFail(bob,charlie)
    )
    else
        {159}event M4DecFail(bob,charlie)
) | (
    {160}out(pub, (encKey(charlie,alice),encKey(charlie,bob),sigKey(charlie)))
)

-- Query event(RecvMsgA(alice,bob)) ==> event(SendMsgA(bob,alice)); event(RecvMsgB(bob,alice)) ==> event(SendMsgB(alice,bob)); not attacker_p1(msg_a(bob,alice)); not attacker_p2(msg_b(alice,bob)); not attacker_p3(msg_a(bob,alice)); not attacker_p3(msg_b(alice,bob)); attacker(sigexp(sigKey(alice))) ==> event(ClientInitialized(alice,charlie))
Completing...
200 rules inserted. The rule base contains 200 rules. 218 rules in the queue.
400 rules inserted. The rule base contains 400 rules. 93 rules in the queue.
600 rules inserted. The rule base contains 582 rules. 114 rules in the queue.
800 rules inserted. The rule base contains 765 rules. 189 rules in the queue.
1000 rules inserted. The rule base contains 903 rules. 253 rules in the queue.
1200 rules inserted. The rule base contains 1016 rules. 230 rules in the queue.
1400 rules inserted. The rule base contains 1149 rules. 256 rules in the queue.
1600 rules inserted. The rule base contains 1213 rules. 278 rules in the queue.
1800 rules inserted. The rule base contains 1364 rules. 224 rules in the queue.
2000 rules inserted. The rule base contains 1501 rules. 102 rules in the queue.
2200 rules inserted. The rule base contains 1584 rules. 41 rules in the queue.
2400 rules inserted. The rule base contains 1454 rules. 5 rules in the queue.
Starting query event(RecvMsgA(alice,bob)) ==> event(SendMsgA(bob,alice))
goal reachable: begin(SendMsgA(bob,charlie)) && begin(ClientInitialized(alice,bob)) -> end(RecvMsgA(alice,bob))

1. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

2. The message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) that may be sent on channel pub by 1 may be received at input {128}.
So the message dhexp(encKey(bob,charlie),g) may be sent on channel pub at output {130}.
mess(pub,dhexp(encKey(bob,charlie),g)).

3. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

4. The message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) that may be sent on channel pub by 3 may be received at input {128}.
So the message encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty))))) may be sent on channel pub at output {136}.
mess(pub,encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty)))))).

5. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

6. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

7. The message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) that may be sent on channel pub by 6 may be received at input {128}.
So the message dhexp(encKey(bob,charlie),g) may be sent on channel pub at output {130}.
mess(pub,dhexp(encKey(bob,charlie),g)).

8. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

9. The message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) that may be sent on channel pub by 8 may be received at input {128}.
So the message encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty))))) may be sent on channel pub at output {136}.
mess(pub,encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty)))))).

10. The event ClientInitialized(alice,bob) may be executed at {2}.
The message dhexp(encKey(bob,charlie),g) that may be sent on channel pub by 7 may be received at input {13}.
The message encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty))))) that may be sent on channel pub by 9 may be received at input {15}.
So the message encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_1,empty,concat2(sigexp(sigKey(alice)),sign(sigKey(alice),concat3(scsig02,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty))))) may be sent on channel pub at output {26}.
mess(pub,encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_1,empty,concat2(sigexp(sigKey(alice)),sign(sigKey(alice),concat3(scsig02,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty)))))).

11. The message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) that may be sent on channel pub by 5 may be received at input {128}.
The message encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_1,empty,concat2(sigexp(sigKey(alice)),sign(sigKey(alice),concat3(scsig02,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty))))) that may be sent on channel pub by 10 may be received at input {137}.
The event SendMsgA(bob,charlie) may be executed at {148}.
So the message encrypt(dhexp(encKey(alice,bob),dhexp(encKey(bob,charlie),g)),nonce_2,empty,msg_a(bob,charlie)) may be sent on channel pub in phase 1 at output {149}.
mess_p1(pub,encrypt(dhexp(encKey(alice,bob),dhexp(encKey(bob,charlie),g)),nonce_2,empty,msg_a(bob,charlie))).

12. The event ClientInitialized(alice,bob) may be executed at {2}.
The message dhexp(encKey(bob,charlie),g) that may be sent on channel pub by 2 may be received at input {13}.
The message encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty))))) that may be sent on channel pub by 4 may be received at input {15}.
The message encrypt(dhexp(encKey(alice,bob),dhexp(encKey(bob,charlie),g)),nonce_2,empty,msg_a(bob,charlie)) that may be sent on channel pub in phase 1 by 11 may be received at input {28}.
So event RecvMsgA(alice,bob) may be executed at {32}.
end(RecvMsgA(alice,bob)).


A more detailed output of the traces is available with
  set traceDisplay = long.

event ServerInitialized(bob,charlie) at {119} in copy a_75748

event ServerInitialized(bob,alice) at {40} in copy a_75748

event ClientInitialized(alice,bob) at {2} in copy a_75748

event ServerInitialized(bob,charlie) at {119} in copy a_75747

event ServerInitialized(bob,alice) at {40} in copy a_75747

event ServerInitialized(bob,charlie) at {119} in copy a_75746

event ServerInitialized(bob,alice) at {40} in copy a_75746

event ClientInitialized(alice,bob) at {2} in copy a_75746

event ServerInitialized(bob,charlie) at {119} in copy a_75745

event ServerInitialized(bob,alice) at {40} in copy a_75745

event ServerInitialized(bob,charlie) at {119} in copy a_75744

event ServerInitialized(bob,alice) at {40} in copy a_75744

event ClientInitialized(alice,bob) at {2} in copy a_75744

event ServerInitialized(bob,charlie) at {119} in copy a_75743

event ServerInitialized(bob,alice) at {40} in copy a_75743

event ServerInitialized(bob,charlie) at {119} in copy a_75742

event ServerInitialized(bob,alice) at {40} in copy a_75742

event ClientInitialized(alice,bob) at {2} in copy a_75742

event ServerInitialized(bob,charlie) at {119} in copy a_75741

event ServerInitialized(bob,alice) at {40} in copy a_75741

event ClientInitialized(alice,bob) at {2} in copy a_75741

event ServerInitialized(bob,charlie) at {119} in copy a_75740

event ServerInitialized(bob,alice) at {40} in copy a_75740

event ServerInitialized(bob,charlie) at {119} in copy a_75739

event ServerInitialized(bob,alice) at {40} in copy a_75739

event ClientInitialized(alice,bob) at {2} in copy a_75739

event ServerInitialized(bob,charlie) at {119} in copy a_75738

event ServerInitialized(bob,alice) at {40} in copy a_75738

event ServerInitialized(bob,charlie) at {119} in copy a_75737

event ServerInitialized(bob,alice) at {40} in copy a_75737

event ClientInitialized(alice,bob) at {2} in copy a_75737

out(pub, (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))) at {11} in copy a_75737 received at {49} in copy a_75737

out(pub, dhexp(encKey(bob,alice),g)) at {51} in copy a_75737 received at {13} in copy a_75737

out(pub, encrypt(dhexp(encKey(bob,alice),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))) at {57} in copy a_75737 received at {15} in copy a_75737

out(pub, encrypt(dhexp(encKey(alice,bob),dhexp(encKey(bob,alice),g)),nonce_1,empty,concat2(sigexp(sigKey(alice)),sign(sigKey(alice),concat3(scsig02,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))) at {26} in copy a_75737 received at {58} in copy a_75737

event HandshakeEstablished(bob,alice) at {65} in copy a_75737

out(pub, (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))) at {11} in copy a_75739 received at {128} in copy a_75737

out(pub, dhexp(encKey(bob,charlie),g)) at {130} in copy a_75737 received at {49} in copy a_75738 (input fails)

out(pub, encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty)))))) at {136} in copy a_75737 received at {128} in copy a_75738 (input fails)

out(pub, (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))) at {11} in copy a_75741 received at {137} in copy a_75737

event M4DecFail(bob,charlie) at {159} in copy a_75737

out(pub, (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))) at {11} in copy a_75742 received at {13} in copy a_75739

out(pub, (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))) at {11} in copy a_75744 received at {15} in copy a_75739

out(pub, (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))) at {11} in copy a_75746 received at {49} in copy a_75739

out(pub, dhexp(encKey(bob,alice),g)) at {51} in copy a_75739 received at {128} in copy a_75739 (input fails)

out(pub, encrypt(dhexp(encKey(bob,alice),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))) at {57} in copy a_75739 received at {49} in copy a_75740 (input fails)

out(pub, (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))) at {11} in copy a_75748 received at {128} in copy a_75743

out(pub, dhexp(encKey(bob,charlie),g)) at {130} in copy a_75743 received at {13} in copy a_75741

out(pub, encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty)))))) at {136} in copy a_75743 received at {15} in copy a_75741

out(pub, encrypt(dhexp(encKey(alice,bob),dhexp(encKey(bob,charlie),g)),nonce_1,empty,concat2(sigexp(sigKey(alice)),sign(sigKey(alice),concat3(scsig02,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,charlie),g),empty)))))) at {26} in copy a_75741 received at {137} in copy a_75743

event HandshakeEstablished(bob,charlie) at {144} in copy a_75743

event SendMsgA(bob,charlie) at {148} in copy a_75743

out(pub, encrypt(dhexp(encKey(bob,charlie),dhexp(encKey(alice,bob),g)),nonce_2,empty,msg_a(bob,charlie))) at {149} in copy a_75743 received at {28} in copy a_75741

event RecvMsgA(alice,bob) at {32} in copy a_75741 (goal)

The event RecvMsgA(alice,bob) is executed.
A trace has been found.
RESULT event(RecvMsgA(alice,bob)) ==> event(SendMsgA(bob,alice)) is false.
Starting query event(RecvMsgB(bob,alice)) ==> event(SendMsgB(alice,bob))
goal reachable: begin(SendMsgA(bob,alice)) && begin(ClientInitialized(alice,bob)) -> end(RecvMsgB(bob,alice))

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

3. By 1, the attacker may have the channel pub.
By 2, the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on this channel.
So the attacker may obtain the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) by listening on this channel.
attacker((dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

4. By 3, the attacker may know (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))).
Using the function 2-proj-2-tuple the attacker may obtain sigexp(sigKey(bob)).
attacker(sigexp(sigKey(bob))).

5. Using the function g the attacker may obtain g.
attacker(g).

6. By 5, the attacker may know g.
By 4, the attacker may know sigexp(sigKey(bob)).
Using the function 2-tuple the attacker may obtain (g,sigexp(sigKey(bob))).
attacker((g,sigexp(sigKey(bob)))).

7. By 1, the attacker may have the channel pub.
By 6, the attacker may have the message (g,sigexp(sigKey(bob))).
So the attacker may send this message on this channel.
mess(pub,(g,sigexp(sigKey(bob)))).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

10. The message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) that may be sent on channel pub by 9 may be received at input {49}.
So the message dhexp(encKey(bob,alice),g) may be sent on channel pub at output {51}.
mess(pub,dhexp(encKey(bob,alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(encKey(bob,alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(encKey(bob,alice),g) by listening on this channel.
attacker(dhexp(encKey(bob,alice),g)).

12. By 11, the attacker may know dhexp(encKey(bob,alice),g).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(dhexp(encKey(bob,alice),g),empty).
attacker(hash(dhexp(encKey(bob,alice),g),empty)).

13. By 5, the attacker may know g.
By 4, the attacker may know sigexp(sigKey(bob)).
Using the function hash the attacker may obtain hash(g,sigexp(sigKey(bob))).
attacker(hash(g,sigexp(sigKey(bob)))).

14. Using the function scsig02 the attacker may obtain scsig02.
attacker(scsig02).

15. By 14, the attacker may know scsig02.
By 13, the attacker may know hash(g,sigexp(sigKey(bob))).
By 12, the attacker may know hash(dhexp(encKey(bob,alice),g),empty).
Using the function concat3 the attacker may obtain concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)).
attacker(concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).

16. The attacker has some term sk_311322.
attacker(sk_311322).

17. By 16, the attacker may know sk_311322.
By 15, the attacker may know concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)).
Using the function sign the attacker may obtain sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).
attacker(sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).

18. By 16, the attacker may know sk_311322.
Using the function sigexp the attacker may obtain sigexp(sk_311322).
attacker(sigexp(sk_311322)).

19. By 18, the attacker may know sigexp(sk_311322).
By 17, the attacker may know sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).
Using the function concat2 the attacker may obtain concat2(sigexp(sk_311322),sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).
attacker(concat2(sigexp(sk_311322),sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).

20. Using the function nonce_1 the attacker may obtain nonce_1.
attacker(nonce_1).

21. By 11, the attacker may know dhexp(encKey(bob,alice),g).
By 20, the attacker may know nonce_1.
By 8, the attacker may know empty.
By 19, the attacker may know concat2(sigexp(sk_311322),sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).
Using the function encrypt the attacker may obtain encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_311322),sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).
attacker(encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_311322),sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))).

22. By 1, the attacker may have the channel pub.
By 21, the attacker may have the message encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_311322),sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).
So the attacker may send this message on this channel.
mess(pub,encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_311322),sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))).

23. The attacker has some term decMsg_b_311321.
attacker(decMsg_b_311321).

24. Using the function nonce_3 the attacker may obtain nonce_3.
attacker(nonce_3).

25. By 11, the attacker may know dhexp(encKey(bob,alice),g).
By 24, the attacker may know nonce_3.
By 8, the attacker may know empty.
By 23, the attacker may know decMsg_b_311321.
Using the function encrypt the attacker may obtain encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321).
attacker(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)).

26. By 25, the attacker may know encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321).
Using the function incrementNonce the attacker may obtain incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)).
attacker(incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321))).

27. By 26, the attacker may know incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)).
So the attacker may know incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)) in phase 1.
attacker_p1(incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321))).

28. By 27, the attacker may know incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)) in phase 1.
So the attacker may know incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)) in phase 2.
attacker_p2(incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321))).

29. By 28, the attacker may know incrementNonce(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)) in phase 2.
Using the function decrementNonce the attacker may obtain encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321) in phase 2.
attacker_p2(encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)).

30. By 1, the attacker may know pub.
Using the function incrementNonce the attacker may obtain incrementNonce(pub).
attacker(incrementNonce(pub)).

31. By 30, the attacker may know incrementNonce(pub).
So the attacker may know incrementNonce(pub) in phase 1.
attacker_p1(incrementNonce(pub)).

32. By 31, the attacker may know incrementNonce(pub) in phase 1.
So the attacker may know incrementNonce(pub) in phase 2.
attacker_p2(incrementNonce(pub)).

33. By 32, the attacker may know incrementNonce(pub) in phase 2.
Using the function decrementNonce the attacker may obtain pub in phase 2.
attacker_p2(pub).

34. By 33, the attacker may have the channel pub in phase 2.
By 29, the attacker may have the message encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321) in phase 2.
So the attacker may send this message on this channel.
mess_p2(pub,encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321)).

35. The message (g,sigexp(sigKey(bob))) that may be sent on channel pub by 7 may be received at input {49}.
The message encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_311322),sign(sk_311322,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) that may be sent on channel pub by 22 may be received at input {58}.
The event SendMsgA(bob,alice) may be executed at {69}.
The message encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,decMsg_b_311321) that may be sent on channel pub in phase 2 by 34 may be received at input {72}.
So event RecvMsgB(bob,alice) may be executed at {76}.
end(RecvMsgB(bob,alice)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(pub, (~M_311838,~M_311839,~M_311840)) with ~M_311838 = encKey(charlie,alice), ~M_311839 = encKey(charlie,bob), ~M_311840 = sigKey(charlie) at {160} in copy a_311329

event ServerInitialized(bob,charlie) at {119} in copy a_311329

event ServerInitialized(bob,alice) at {40} in copy a_311329

out(pub, (~M_312283,~M_312284,~M_312285)) with ~M_312283 = encKey(charlie,alice), ~M_312284 = encKey(charlie,bob), ~M_312285 = sigKey(charlie) at {160} in copy a_311328

event ServerInitialized(bob,charlie) at {119} in copy a_311328

event ServerInitialized(bob,alice) at {40} in copy a_311328

event ClientInitialized(alice,bob) at {2} in copy a_311328

out(pub, (~M_312952,~M_312953)) with ~M_312952 = dhexp(encKey(alice,bob),g), ~M_312953 = sigexp(sigKey(bob)) at {11} in copy a_311328

out(pub, (~M_312981,~M_312982,~M_312983)) with ~M_312981 = encKey(charlie,alice), ~M_312982 = encKey(charlie,bob), ~M_312983 = sigKey(charlie) at {160} in copy a_311327

event ServerInitialized(bob,charlie) at {119} in copy a_311327

event ServerInitialized(bob,alice) at {40} in copy a_311327

out(pub, (~M_313426,~M_313427,~M_313428)) with ~M_313426 = encKey(charlie,alice), ~M_313427 = encKey(charlie,bob), ~M_313428 = sigKey(charlie) at {160} in copy a_311326

event ServerInitialized(bob,charlie) at {119} in copy a_311326

event ServerInitialized(bob,alice) at {40} in copy a_311326

event ClientInitialized(alice,bob) at {2} in copy a_311326

out(pub, (~M_314095,~M_314096)) with ~M_314095 = dhexp(encKey(alice,bob),g), ~M_314096 = sigexp(sigKey(bob)) at {11} in copy a_311326

in(pub, (~M_312952,~M_312953)) with ~M_312952 = dhexp(encKey(alice,bob),g), ~M_312953 = sigexp(sigKey(bob)) at {49} in copy a_311327

out(pub, ~M_314183) with ~M_314183 = dhexp(encKey(bob,alice),g) at {51} in copy a_311327

out(pub, ~M_314287) with ~M_314287 = encrypt(dhexp(encKey(bob,alice),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) at {57} in copy a_311327

in(pub, (g,~M_312953)) with ~M_312953 = sigexp(sigKey(bob)) at {49} in copy a_311329

out(pub, ~M_314353) with ~M_314353 = dhexp(encKey(bob,alice),g) at {51} in copy a_311329

out(pub, ~M_314457) with ~M_314457 = encrypt(dhexp(encKey(bob,alice),g),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) at {57} in copy a_311329

in(pub, encrypt(~M_314183,nonce_1,empty,concat2(sigexp(a_311325),sign(a_311325,concat3(scsig02,hash(g,~M_312953),hash(~M_314183,empty)))))) with encrypt(~M_314183,nonce_1,empty,concat2(sigexp(a_311325),sign(a_311325,concat3(scsig02,hash(g,~M_312953),hash(~M_314183,empty))))) = encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(a_311325),sign(a_311325,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) at {58} in copy a_311329

event HandshakeEstablished(bob,alice) at {65} in copy a_311329

event SendMsgA(bob,alice) at {69} in copy a_311329

out(pub, ~M_314571) with ~M_314571 = encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) at {70} in copy a_311329

in(pub, encrypt(~M_314183,nonce_3,empty,a_311324)) with encrypt(~M_314183,nonce_3,empty,a_311324) = encrypt(dhexp(encKey(bob,alice),g),nonce_3,empty,a_311324) at {72} in copy a_311329

event RecvMsgB(bob,alice) at {76} in copy a_311329 (goal)

The event RecvMsgB(bob,alice) is executed.
A trace has been found.
RESULT event(RecvMsgB(bob,alice)) ==> event(SendMsgB(alice,bob)) is false.
Starting query not attacker_p1(msg_a(bob,alice))
goal reachable: begin(SendMsgA(bob,alice)) && begin(ClientInitialized(alice,bob)) -> attacker_p1(msg_a(bob,alice))

1. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

2. Using the function pub the attacker may obtain pub.
attacker(pub).

3. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

4. By 2, the attacker may have the channel pub.
By 3, the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on this channel.
So the attacker may obtain the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) by listening on this channel.
attacker((dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

5. By 4, the attacker may know (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))).
Using the function 2-proj-2-tuple the attacker may obtain sigexp(sigKey(bob)).
attacker(sigexp(sigKey(bob))).

6. Using the function g the attacker may obtain g.
attacker(g).

7. By 6, the attacker may know g.
By 5, the attacker may know sigexp(sigKey(bob)).
Using the function 2-tuple the attacker may obtain (g,sigexp(sigKey(bob))).
attacker((g,sigexp(sigKey(bob)))).

8. By 2, the attacker may have the channel pub.
By 7, the attacker may have the message (g,sigexp(sigKey(bob))).
So the attacker may send this message on this channel.
mess(pub,(g,sigexp(sigKey(bob)))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

11. The message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) that may be sent on channel pub by 10 may be received at input {49}.
So the message dhexp(encKey(bob,alice),g) may be sent on channel pub at output {51}.
mess(pub,dhexp(encKey(bob,alice),g)).

12. By 2, the attacker may have the channel pub.
By 11, the message dhexp(encKey(bob,alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(encKey(bob,alice),g) by listening on this channel.
attacker(dhexp(encKey(bob,alice),g)).

13. By 12, the attacker may know dhexp(encKey(bob,alice),g).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(dhexp(encKey(bob,alice),g),empty).
attacker(hash(dhexp(encKey(bob,alice),g),empty)).

14. By 6, the attacker may know g.
By 5, the attacker may know sigexp(sigKey(bob)).
Using the function hash the attacker may obtain hash(g,sigexp(sigKey(bob))).
attacker(hash(g,sigexp(sigKey(bob)))).

15. Using the function scsig02 the attacker may obtain scsig02.
attacker(scsig02).

16. By 15, the attacker may know scsig02.
By 14, the attacker may know hash(g,sigexp(sigKey(bob))).
By 13, the attacker may know hash(dhexp(encKey(bob,alice),g),empty).
Using the function concat3 the attacker may obtain concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)).
attacker(concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).

17. The attacker has some term sk_314649.
attacker(sk_314649).

18. By 17, the attacker may know sk_314649.
By 16, the attacker may know concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)).
Using the function sign the attacker may obtain sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).
attacker(sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).

19. By 17, the attacker may know sk_314649.
Using the function sigexp the attacker may obtain sigexp(sk_314649).
attacker(sigexp(sk_314649)).

20. By 19, the attacker may know sigexp(sk_314649).
By 18, the attacker may know sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).
Using the function concat2 the attacker may obtain concat2(sigexp(sk_314649),sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).
attacker(concat2(sigexp(sk_314649),sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).

21. Using the function nonce_1 the attacker may obtain nonce_1.
attacker(nonce_1).

22. By 12, the attacker may know dhexp(encKey(bob,alice),g).
By 21, the attacker may know nonce_1.
By 9, the attacker may know empty.
By 20, the attacker may know concat2(sigexp(sk_314649),sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).
Using the function encrypt the attacker may obtain encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_314649),sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).
attacker(encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_314649),sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))).

23. By 2, the attacker may have the channel pub.
By 22, the attacker may have the message encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_314649),sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).
So the attacker may send this message on this channel.
mess(pub,encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_314649),sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))).

24. The message (g,sigexp(sigKey(bob))) that may be sent on channel pub by 8 may be received at input {49}.
The message encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_314649),sign(sk_314649,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) that may be sent on channel pub by 23 may be received at input {58}.
The event SendMsgA(bob,alice) may be executed at {69}.
So the message encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) may be sent on channel pub in phase 1 at output {70}.
mess_p1(pub,encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice))).

25. By 1, the attacker may have the channel pub in phase 1.
By 24, the message encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 1 may be sent on this channel.
So the attacker may obtain the message encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 1 by listening on this channel.
attacker_p1(encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice))).

26. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

27. Using the function nonce_2 the attacker may obtain nonce_2 in phase 1.
attacker_p1(nonce_2).

28. By 12, the attacker may know dhexp(encKey(bob,alice),g).
So the attacker may know dhexp(encKey(bob,alice),g) in phase 1.
attacker_p1(dhexp(encKey(bob,alice),g)).

29. By 28, the attacker may know dhexp(encKey(bob,alice),g) in phase 1.
By 27, the attacker may know nonce_2 in phase 1.
By 26, the attacker may know empty in phase 1.
By 25, the attacker may know encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,empty,msg_a(bob,alice)) in phase 1.
attacker_p1(aeadpack(true,empty,msg_a(bob,alice))).

30. By 29, the attacker may know aeadpack(true,empty,msg_a(bob,alice)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(bob,alice) in phase 1.
attacker_p1(msg_a(bob,alice)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(pub, (~M_315175,~M_315176,~M_315177)) with ~M_315175 = encKey(charlie,alice), ~M_315176 = encKey(charlie,bob), ~M_315177 = sigKey(charlie) at {160} in copy a_314664

event ServerInitialized(bob,charlie) at {119} in copy a_314664

event ServerInitialized(bob,alice) at {40} in copy a_314664

out(pub, (~M_315620,~M_315621,~M_315622)) with ~M_315620 = encKey(charlie,alice), ~M_315621 = encKey(charlie,bob), ~M_315622 = sigKey(charlie) at {160} in copy a_314663

event ServerInitialized(bob,charlie) at {119} in copy a_314663

event ServerInitialized(bob,alice) at {40} in copy a_314663

event ClientInitialized(alice,bob) at {2} in copy a_314663

out(pub, (~M_316289,~M_316290)) with ~M_316289 = dhexp(encKey(alice,bob),g), ~M_316290 = sigexp(sigKey(bob)) at {11} in copy a_314663

out(pub, (~M_316318,~M_316319,~M_316320)) with ~M_316318 = encKey(charlie,alice), ~M_316319 = encKey(charlie,bob), ~M_316320 = sigKey(charlie) at {160} in copy a_314662

event ServerInitialized(bob,charlie) at {119} in copy a_314662

event ServerInitialized(bob,alice) at {40} in copy a_314662

out(pub, (~M_316763,~M_316764,~M_316765)) with ~M_316763 = encKey(charlie,alice), ~M_316764 = encKey(charlie,bob), ~M_316765 = sigKey(charlie) at {160} in copy a_314661

event ServerInitialized(bob,charlie) at {119} in copy a_314661

event ServerInitialized(bob,alice) at {40} in copy a_314661

event ClientInitialized(alice,bob) at {2} in copy a_314661

out(pub, (~M_317432,~M_317433)) with ~M_317432 = dhexp(encKey(alice,bob),g), ~M_317433 = sigexp(sigKey(bob)) at {11} in copy a_314661

in(pub, (~M_316289,~M_316290)) with ~M_316289 = dhexp(encKey(alice,bob),g), ~M_316290 = sigexp(sigKey(bob)) at {49} in copy a_314662

out(pub, ~M_317520) with ~M_317520 = dhexp(encKey(bob,alice),g) at {51} in copy a_314662

out(pub, ~M_317624) with ~M_317624 = encrypt(dhexp(encKey(bob,alice),dhexp(encKey(alice,bob),g)),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) at {57} in copy a_314662

in(pub, (g,~M_316290)) with ~M_316290 = sigexp(sigKey(bob)) at {49} in copy a_314664

out(pub, ~M_317690) with ~M_317690 = dhexp(encKey(bob,alice),g) at {51} in copy a_314664

out(pub, ~M_317794) with ~M_317794 = encrypt(dhexp(encKey(bob,alice),g),nonce_0,empty,concat2(sigexp(sigKey(bob)),sign(sigKey(bob),concat3(scsig01,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) at {57} in copy a_314664

in(pub, encrypt(~M_317520,nonce_1,empty,concat2(sigexp(a_314660),sign(a_314660,concat3(scsig02,hash(g,~M_316290),hash(~M_317520,empty)))))) with encrypt(~M_317520,nonce_1,empty,concat2(sigexp(a_314660),sign(a_314660,concat3(scsig02,hash(g,~M_316290),hash(~M_317520,empty))))) = encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(a_314660),sign(a_314660,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) at {58} in copy a_314664

event HandshakeEstablished(bob,alice) at {65} in copy a_314664

event SendMsgA(bob,alice) at {69} in copy a_314664

out(pub, ~M_317908) with ~M_317908 = encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) at {70} in copy a_314664

The attacker has the message 3-proj-aeadpack(decrypt(~M_317520,nonce_2,empty,~M_317908)) = msg_a(bob,alice) in phase 1.
A trace has been found.
RESULT not attacker_p1(msg_a(bob,alice)) is false.
Starting query not attacker_p2(msg_b(alice,bob))
RESULT not attacker_p2(msg_b(alice,bob)) is true.
Starting query not attacker_p3(msg_a(bob,alice))
goal reachable: begin(SendMsgA(bob,alice)) && begin(ClientInitialized(alice,bob)) -> attacker_p3(msg_a(bob,alice))

1. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

2. Using the function pub the attacker may obtain pub.
attacker(pub).

3. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

4. By 2, the attacker may have the channel pub.
By 3, the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on this channel.
So the attacker may obtain the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) by listening on this channel.
attacker((dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

5. By 4, the attacker may know (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))).
Using the function 2-proj-2-tuple the attacker may obtain sigexp(sigKey(bob)).
attacker(sigexp(sigKey(bob))).

6. Using the function g the attacker may obtain g.
attacker(g).

7. By 6, the attacker may know g.
By 5, the attacker may know sigexp(sigKey(bob)).
Using the function 2-tuple the attacker may obtain (g,sigexp(sigKey(bob))).
attacker((g,sigexp(sigKey(bob)))).

8. By 2, the attacker may have the channel pub.
By 7, the attacker may have the message (g,sigexp(sigKey(bob))).
So the attacker may send this message on this channel.
mess(pub,(g,sigexp(sigKey(bob)))).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. The event ClientInitialized(alice,bob) may be executed at {2}.
So the message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) may be sent on channel pub at output {11}.
mess(pub,(dhexp(encKey(alice,bob),g),sigexp(sigKey(bob)))).

11. The message (dhexp(encKey(alice,bob),g),sigexp(sigKey(bob))) that may be sent on channel pub by 10 may be received at input {49}.
So the message dhexp(encKey(bob,alice),g) may be sent on channel pub at output {51}.
mess(pub,dhexp(encKey(bob,alice),g)).

12. By 2, the attacker may have the channel pub.
By 11, the message dhexp(encKey(bob,alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(encKey(bob,alice),g) by listening on this channel.
attacker(dhexp(encKey(bob,alice),g)).

13. By 12, the attacker may know dhexp(encKey(bob,alice),g).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(dhexp(encKey(bob,alice),g),empty).
attacker(hash(dhexp(encKey(bob,alice),g),empty)).

14. By 6, the attacker may know g.
By 5, the attacker may know sigexp(sigKey(bob)).
Using the function hash the attacker may obtain hash(g,sigexp(sigKey(bob))).
attacker(hash(g,sigexp(sigKey(bob)))).

15. Using the function scsig02 the attacker may obtain scsig02.
attacker(scsig02).

16. By 15, the attacker may know scsig02.
By 14, the attacker may know hash(g,sigexp(sigKey(bob))).
By 13, the attacker may know hash(dhexp(encKey(bob,alice),g),empty).
Using the function concat3 the attacker may obtain concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)).
attacker(concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).

17. The attacker has some term sk_317957.
attacker(sk_317957).

18. By 17, the attacker may know sk_317957.
By 16, the attacker may know concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)).
Using the function sign the attacker may obtain sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).
attacker(sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).

19. By 17, the attacker may know sk_317957.
Using the function sigexp the attacker may obtain sigexp(sk_317957).
attacker(sigexp(sk_317957)).

20. By 19, the attacker may know sigexp(sk_317957).
By 18, the attacker may know sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))).
Using the function concat2 the attacker may obtain concat2(sigexp(sk_317957),sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).
attacker(concat2(sigexp(sk_317957),sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).

21. Using the function nonce_1 the attacker may obtain nonce_1.
attacker(nonce_1).

22. By 12, the attacker may know dhexp(encKey(bob,alice),g).
By 21, the attacker may know nonce_1.
By 9, the attacker may know empty.
By 20, the attacker may know concat2(sigexp(sk_317957),sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))).
Using the function encrypt the attacker may obtain encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_317957),sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).
attacker(encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_317957),sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))).

23. By 2, the attacker may have the channel pub.
By 22, the attacker may have the message encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_317957),sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))).
So the attacker may send this message on this channel.
mess(pub,encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_317957),sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty)))))).

24. The message (g,sigexp(sigKey(bob))) that may be sent on channel pub by 8 may be received at input {49}.
The message encrypt(dhexp(encKey(bob,alice),g),nonce_1,empty,concat2(sigexp(sk_317957),sign(sk_317957,concat3(scsig02,hash(g,sigexp(sigKey(bob))),hash(dhexp(encKey(bob,alice),g),empty))))) that may be sent on channel pub by 23 may be received at input {58}.
The event SendMsgA(bob,alice) may be executed at {69}.
So the message encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) may be sent on channel pub in phase 1 at output {70}.
mess_p1(pub,encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice))).

25. By 1, the attacker may have the channel pub in phase 1.
By 24, the message encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 1 may be sent on this channel.
So the attacker may obtain the message encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 1 by listening on this channel.
attacker_p1(encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice))).

26. By 25, the attacker may know encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 1.
So the attacker may know encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 2.
attacker_p2(encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice))).

27. By 26, the attacker may know encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 2.
So the attacker may know encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 3.
attacker_p3(encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice))).

28. Using the function empty the attacker may obtain empty in phase 3.
attacker_p3(empty).

29. Using the function nonce_2 the attacker may obtain nonce_2 in phase 3.
attacker_p3(nonce_2).

30. By 12, the attacker may know dhexp(encKey(bob,alice),g).
Using the function incrementNonce the attacker may obtain incrementNonce(dhexp(encKey(bob,alice),g)).
attacker(incrementNonce(dhexp(encKey(bob,alice),g))).

31. By 30, the attacker may know incrementNonce(dhexp(encKey(bob,alice),g)).
So the attacker may know incrementNonce(dhexp(encKey(bob,alice),g)) in phase 1.
attacker_p1(incrementNonce(dhexp(encKey(bob,alice),g))).

32. By 31, the attacker may know incrementNonce(dhexp(encKey(bob,alice),g)) in phase 1.
So the attacker may know incrementNonce(dhexp(encKey(bob,alice),g)) in phase 2.
attacker_p2(incrementNonce(dhexp(encKey(bob,alice),g))).

33. By 32, the attacker may know incrementNonce(dhexp(encKey(bob,alice),g)) in phase 2.
So the attacker may know incrementNonce(dhexp(encKey(bob,alice),g)) in phase 3.
attacker_p3(incrementNonce(dhexp(encKey(bob,alice),g))).

34. By 33, the attacker may know incrementNonce(dhexp(encKey(bob,alice),g)) in phase 3.
Using the function decrementNonce the attacker may obtain dhexp(encKey(bob,alice),g) in phase 3.
attacker_p3(dhexp(encKey(bob,alice),g)).

35. By 34, the attacker may know dhexp(encKey(bob,alice),g) in phase 3.
By 29, the attacker may know nonce_2 in phase 3.
By 28, the attacker may know empty in phase 3.
By 27, the attacker may know encrypt(dhexp(encKey(bob,alice),g),nonce_2,empty,msg_a(bob,alice)) in phase 3.
Using the function decrypt the attacker may obtain aeadpack(true,empty,msg_a(bob,alice)) in phase 3.
attacker_p3(aeadpack(true,empty,msg_a(bob,alice))).

36. By 35, the attacker may know aeadpack(true,empty,msg_a(bob,alice)) in phase 3.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(bob,alice) in phase 3.
attacker_p3(msg_a(bob,alice)).


Could not find a trace corresponding to this derivation.
RESULT not attacker_p3(msg_a(bob,alice)) cannot be proved.
Starting query not attacker_p3(msg_b(alice,bob))
RESULT not attacker_p3(msg_b(alice,bob)) is true.
Starting query attacker(sigexp(sigKey(alice))) ==> event(ClientInitialized(alice,charlie))
goal reachable: begin(ClientInitialized(alice,charlie)) -> attacker(sigexp(sigKey(alice)))
RESULT attacker(sigexp(sigKey(alice))) ==> event(ClientInitialized(alice,charlie)) is true.
